from socket import *

server_name = 'localhost'
server_port = 12000

client_socket = socket(AF_INET, SOCK_STREAM)
# AF_INET per Ipv4, e SOCK_STREAM per TCP, a differenza di SOCK_DGRAM

# Dobbiamo aprire col 3-way handshake

client_socket.connect((server_name, server_port))

# Inizio la comunicazione vera e propria col server

message = input("Inserisci una stringa: ")  # Chiamata bloccante
encoded_message = message.encode('utf-8')
# Solo dopo aver effettuato la connect posso inviare messaggi, e quindi uso send()
# al posto di sendto() perché già ho stabilito una connessione
client_socket.send(encoded_message)
# Anche qui uso rcv() al posto di rcvfrom()
response = client_socket.recv(2048)
# Rcv ha solo un parametro di ritorno (non ha l'indirizzo del mittente sempre per la stessa ragione)
# Cioè il messaggio di ritorno
print(response.decode('utf-8'))

client_socket.close()

'''
Lato client le differenze fondamentali sono la SOCK_STREAM al posto della SOCK_DGRAM, e al posto
di sendto e recvfrom si usano solo send e rcv (i messaggi devono essere comunque decodificati).
C'è sempre bisogno di aprire una connessione a priori e di chiuderla a posteriori.
'''
